# -*- coding: utf-8 -*-
"""heart-attack-analysis-prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lgjmruHfuNDXhmUkmczgpfaD7DmF8pB3
"""

!pip install -q kaggle

from google.colab import files

files.upload()

!mkdir ~/.kaggle

!cp kaggle.json ~/.kaggle/

!chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets list

!kaggle datasets download -d rashikrahmanpritom/heart-attack-analysis-prediction-dataset

!unzip heart-attack-analysis-prediction-dataset

import pandas as pd

data_heart=pd.read_csv("/content/heart.csv")

data_heart.head()

data2=pd.read_csv("/content/o2Saturation.csv")

data_heart.shape

from sklearn.model_selection import train_test_split



data_heart['sex'].value_counts()



# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline

plt.subplot(1,2,1)


plt.hist(data_heart.loc[data_heart['output']==1,"thalach"])
plt.title("output==1")

plt.subplot(1,2,2)


plt.hist(data_heart.loc[data_heart['output']==0,"thalach"])
plt.title("output==0")

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.preprocessing import MinMaxScaler
from sklearn.linear_model import LogisticRegression
from tensorflow.keras.optimizers import SGD

data=data_heart.iloc[:,0:12].to_numpy()
sc =MinMaxScaler()
data = sc.fit_transform(data)
data

y=data_heart.iloc[:,13].to_numpy()
X_train, X_test, y_train, y_test=train_test_split(data,y,test_size=0.2)

model=Sequential([
                  Dense(20,input_dim=12,activation="relu"),

                  Dense(1, activation="sigmoid")
])

model.compile(loss='binary_crossentropy', optimizer=SGD(learning_rate=0.001), metrics=['accuracy'])

model.fit(X_train,y_train,epochs=1000)

model.evaluate(X_test,y_test)